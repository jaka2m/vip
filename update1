#!/bin/bashclearGITHUB_CMD="https://github.com/FighterTunnel/tunnel/raw/"IPVPS=$(curl -s ipv4.icanhazip.com)domain=$(cat /etc/xray/domain)PUB=$(cat /etc/slowdns/server.pub)CITY=$(cat /etc/xray/city)NS=$(cat /etc/xray/dns)Information_update() {  echo -e "  ${OR}──────────────────────────────────────${NC}"  printf "\e[1;92m      .::.\e[0m\e[1;77m Update Autoscript \e[1;92m.::.\e[0m\n"  echo -e "  ${OR}──────────────────────────────────────${NC}"  echo ""  echo -e ""  echo -e "       \033[92mAutoscript has been updated\033[1;91m"  echo -e "  \033[0;33mYour VPS\033[1;91m $IPVPS \033[0;33mUpdate script\033[1;91m"  echo -e "       \033[0;33mFeature new info for scripts\033[0m"  echo -e ""  echo -e "     1.Listen"  echo -e "     2.SSH Websocket"  #echo -e "     5.Delete user via number"  #echo -e "     6.Bot Fixed Telegram"  #echo -e "     7.Delete Alt Port 222-9999"  #echo -e "     8.Autolock multi login ssh"  #echo -e "     9.Chnge font simple bot"  #echo -e "     10.Added admin simple bot"  echo -e ""  echo -e "  ${OR}──────────────────────────────────────${NC}"  echo -e "          CTRL + C TO BACK MENU"}Information_updateread -n 1 -s -r -p "       Press enter update server"fun_bar() {  CMD[0]="$1"  CMD[1]="$2"  (    [[ -e $HOME/fim ]] && rm $HOME/fim    ${CMD[0]} -y >/dev/null 2>&1    ${CMD[1]} -y >/dev/null 2>&1    touch $HOME/fim  ) >/dev/null 2>&1 &  tput civis  echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["  while true; do    for ((i = 0; i < 8; i++)); do      echo -ne "\033[0;32m🌍"      sleep 0.1s    done    [[ -e $HOME/fim ]] && rm $HOME/fim && break    echo -e "\033[0;33m]"    sleep 1s    tput cuu1    tput dl1    echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["  done  echo -e "\033[0;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"  tput cnorm}resarea() {  cd /etc/openvpn  rm -rf *  cd /var/www/html/  rm -rf *  cd  source <(curl -sL https://github.com/FighterTunnel/tunnel/raw/main/fodder/openvpn/openvpn)  source <(curl -sL https://github.com/FighterTunnel/tunnel/raw/main/fodder/FighterTunnel-examples/ipserver)  wget -O /etc/sysctl.conf "${GITHUB_CMD}main/fodder/FighterTunnel-examples/Documentation/sysctl.conf" >/dev/null 2>&1  wget -O /etc/haproxy/haproxy.cfg "${GITHUB_CMD}main/fodder/FighterTunnel-examples/haproxy.cfg" >/dev/null 2>&1  wget -q -O /etc/ssh/sshd_config "${GITHUB_CMD}main/fodder/FighterTunnel-examples/sshd" >/dev/null 2>&1  wget -O /etc/nginx/conf.d/xray.conf "${GITHUB_CMD}main/fodder/nginx/xray" >/dev/null 2>&1  wget -O /etc/nginx/nginx.conf "${GITHUB_CMD}main/fodder/nginx/nginx.conf" >/dev/null 2>&1  wget -O /usr/bin/ws.py "https://github.com/FighterTunnel/tunnel/raw/main/fodder/websocket/ws.py" >/dev/null 2>&1  wget -O /etc/systemd/system/ws.service "https://github.com/FighterTunnel/tunnel/raw/main/fodder/websocket/socks.service" >/dev/null 2>&1  sysctl -p  systemctl daemon-reload  systemctl restart haproxy  systemctl restart server  systemctl restart client  systemctl restart nginx  systemctl restart ssh  systemctl restart sshd  systemctl enable udp  systemctl enable ws  systemctl start udp  systemctl start ws  systemctl restart udp}res1() {  rm -rf *  rm -rf /etc/ftvpn  wget -O /usr/bin/udp "https://github.com/FighterTunnel/tunnel/raw/main/fodder/bhoikfostyahya/udp-custom-linux-amd64" >/dev/null 2>&1  wget https://github.com/FighterTunnel/tunnel/raw/main/fodder/bhoikfostyahya/XrayFT.zip >/dev/null 2>&1  7z e -pFtvpn@123Sc XrayFT.zip  unzip ftvpn.zip  mv ftvpn /etc  rm -f XrayFT.zip  rm -f ftvpn.zip  chmod +x *  mv * /usr/bin/  chmod +x /usr/bin/udp  echo "/bin/false" >>/etc/shells  echo "/usr/sbin/nologin" >>/etc/shells  cat >/etc/rc.local <<-END		#!/bin/sh -e		# rc.local		# By default this script does nothing.		#iptables -I INPUT -p udp --dport 5300 -j ACCEPT		#iptables -t nat -I PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5300		netfilter-persistent reload		#exit 0	END  chmod +x /etc/rc.local  cat >/etc/cron.d/x_limp <<-END		SHELL=/bin/sh		PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin		*/10 * * * * root /usr/bin/xraylimitEND  cat >/usr/bin/config.json <<-END{  "listen": ":2100",  "stream_buffer": 33554432,  "receive_buffer": 83886080,  "auth": {    "mode": "passwords"  }}END  cat >/etc/msmtprc <<EOFdefaultstls ontls_starttls ontls_trust_file /etc/ssl/certs/ca-certificates.crtaccount defaulthost smtp.gmail.comport 587auth onuser sc.fightertunnel@gmail.comfrom sc.fightertunnel@gmail.compassword uxiwsmmaladzsywxlogfile ~/.msmtp.logEOF  cat >/etc/systemd/system/udp.service <<EOF[Unit]Description=ePro Udp-Custom VPN Server By HCAfter=network.target[Service]User=rootWorkingDirectory=/usr/binExecStart=/usr/bin/udp server -exclude 2200,7300,7200,7100,323,10008,10004 /usr/bin/config.jsonEnvironment=HYSTERIA_LOG_LEVEL=infoCapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE CAP_NET_RAWAmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE CAP_NET_RAWNoNewPrivileges=trueLimitNPROC=10000LimitNOFILE=1000000Restart=on-failureRestartPreventExitStatus=23[Install]WantedBy=multi-user.targetEOF  cat >/lib/systemd/system/haproxy.service <<EOF[Unit]Description=FighterTunnel Load BalancerDocumentation=https://github.com/FighterTunnelAfter=network-online.target rsyslog.service[Service]ExecStart=/usr/sbin/ftvpn -Ws -f /etc/haproxy/haproxy.cfg -p 18173 Restart=on-failureRestartPreventExitStatus=23LimitNPROC=10000LimitNOFILE=1000000[Install]WantedBy=multi-user.targetEOF}clearecho -e "\033[0;33m ┌──────────────────────────────────────────┐\033[0m"echo -e "\033[0;33m │\033[0m        \033[0;32mUPDATE AUTOSCRIPT SERVER\033[0m          \033[0;33m|\033[0m"echo -e "\033[0;33m └──────────────────────────────────────────┘\033[0m"echo -e " "echo -e "  \033[1;91m Tunggu Sedang Update Autoscript\033[1;37m"fun_bar 'res1'echo -e "  \033[1;91m Input Data Update Akan Selesai\033[1;37m"fun_bar 'resarea'echo -e "      \e[1;32mUPDATE SUCCESS HAS BEEN DONE\e[0m\n"read -n 1 -s -r -p "      PRESS ENTER RESTART SERVICE"seres